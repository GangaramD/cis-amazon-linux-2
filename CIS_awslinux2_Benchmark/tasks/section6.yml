## START COPYRIGHT NOTICE ##
# AmazonLinux2-CIS Ansible Script
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at https://mozilla.org/MPL/2.0/.
## END COPYRIGHT NOTICE ##
- name: "NOTSCORED | 6.1.1 | PATCH | Audit system file permissions"
  command: /bin/true
  changed_when: no
  when:
    - amazonlinux2cis_level2 is defined and amazonlinux2cis_level2
  tags:
    - patch
    - rule_6.1.1
    - level2
    - low

- name: "SCORED | 6.1.2 | PATCH | Ensure permissions on /etc/passwd are configured"
  file:
    dest: /etc/passwd
    owner: root
    group: root
    mode: 0644
  tags:
    - rule_6.1.2
    - patch
    - level1
    - low

- name: "SCORED | 6.1.3 | PATCH | Ensure permissions on /etc/shadow are configured"
  file:
    dest: /etc/shadow
    owner: root
    group: root
    mode: 0000
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
  tags:
    - rule_6.1.3
    - patch
    - level1
    - low

- name: "SCORED | 6.1.4 | PATCH | Ensure permissions on /etc/group are configured"
  file:
    dest: /etc/group
    owner: root
    group: root
    mode: 0644
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
  tags:
    - rule_6.1.4
    - patch
    - level1
    - low

- name: "SCORED | 6.1.5 | PATCH | Ensure permissions on /etc/gshadow are configured"
  file:
    dest: /etc/gshadow
    owner: root
    group: root
    mode: 0000
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
  tags:
    - rule_6.1.5
    - patch
    - level1
    - low

- name: "SCORED | 6.1.6 | PATCH | Ensure permissions on /etc/passwd- are configured"
  file:
    dest: /etc/passwd-
    owner: root
    group: root
    mode: 0644
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
  tags:
    - rule_6.1.6
    - patch
    - level1
    - low

- name: "SCORED | 6.1.7 | PATCH | Ensure permissions on /etc/shadow- are configured"
  file:
    dest: /etc/shadow-
    owner: root
    group: root
    mode: 0000
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
  tags:
    - rule_6.1.7
    - patch
    - level1
    - low

- name: "SCORED | 6.1.8 | PATCH | Ensure permissions on /etc/group- are configured"
  file:
    dest: /etc/group-
    owner: root
    group: root
    mode: 0600
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
  tags:
    - rule_6.1.8
    - patch
    - level1
    - low

- name: "SCORED | 6.1.9 | PATCH | Ensure permissions on /etc/gshadow- are configured"
  file:
    dest: /etc/gshadow-
    owner: root
    group: root
    mode: 0600
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
  tags:
    - rule_6.1.9
    - patch
    - level1
    - low

- name: "SCORED | 6.1.10 | PATCH | Ensure no world writable files exist"
  command: /bin/true
  changed_when: no
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
  tags:
    - rule_6.1.10
    - patch
    - level1
    - low

- name: "SCORED | 6.1.11 | PATCH | Ensure no unowned files or directories exist"
  command: /bin/true
  changed_when: no
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
  tags:
    - rule_6.1.11
    - patch
    - level1
    - low

- name: "SCORED | 6.1.12 | PATCH | Ensure no ungrouped files or directories exist"
  command: /bin/true
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
  tags:
    - rule_6.1.12
    - patch
    - level1
    - low

- name: "NOTSCORED | 6.1.13 | PATCH | Audit SUID executables"
  command: /bin/true
  changed_when: no
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
  tags:
    - rule_6.1.13
    - patch
    - level1
    - low

- name: "NOTSCORED | 6.1.14 | PATCH | Audit SGID executables"
  command: /bin/true
  changed_when: no
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
  tags:
    - rule_6.1.14
    - patch
    - level1
    - low

- name: "SCORED | 6.2.1 | PATCH | Ensure password fields are not empty"
  command: passwd -l {{ item }}
  with_items: "{{ empty_password_accounts.stdout_lines }}"
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
    - empty_password_accounts is defined and empty_password_accounts.rc
  tags:
    - rule_6.2.1
    - patch
    - level1
    - low

- name: "SCORED | 6.2.2 | PATCH | Ensure no legacy '+' entries exist in /etc/passwd"
  shell: "sed -i '/^+/ d' /etc/passwd"
  args:
    warn: no
  ignore_errors: yes
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
  tags:
    - rule_6.2.2
    - patch
    - level1
    - low

- name: "SCORED | 6.2.3 | PATCH | Ensure no legacy '+' entries exist in /etc/shadow"
  command: "sed -i '/^+/ d' /etc/shadow"
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
  tags:
    - rule_6.2.3
    - patch
    - level1
    - low

- name: "SCORED | 6.2.4 | PATCH | Ensure no legacy '+' entries exist in /etc/group"
  command: sed -i '/^+/ d' /etc/group
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
  tags:
    - rule_6.2.4
    - patch
    - level1
    - low

- name: "SCORED | 6.2.5 | PATCH | Ensure root is the only UID 0 account"
  command: passwd -l {{ item }}
  with_items: "{{ uid_zero_accounts_except_root.stdout_lines }}"
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
    - uid_zero_accounts_except_root is defined and uid_zero_accounts_except_root.rc
  tags:
    - rule_6.2.5
    - patch
    - level1
    - low

- name: "SCORED | 6.2.6 | PATCH | Ensure root PATH Integrity"
  copy:
    src: scripts/6.2.6.sh
    dest: /opt/6.2.6.sh
    owner: root
    group: root
    mode: 0700
  changed_when: no
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
  tags:
    - rule_6.2.6
    - low
    - level1
    - low

- name: "SCORED | 6.2.6 | PATCH | Ensure root PATH Integrity"
  shell: /opt/6.2.6.sh
  args:
    executable: /bin/bash
  register: root_path_integrity
  no_log: yes
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
  tags:
    - rule_6.2.6
    - low
    - level1
    - low

# - name: "SCORED | 6.2.6 | PATCH | Ensure root PATH Integrity"
#   debug:
#     var: root_path_integrity.stdout_lines
#   when:
#     - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
#     - root_path_integrity is defined and root_path_integrity.stdout != ""
#   tags:
#     - rule_6.2.6
#     - low
#     - level1
#     - low

- name: "SCORED | 6.2.6 | PATCH | Ensure root PATH Integrity"
  debug:
    msg: "PASS | 6.2.6 | root PATH integrity"
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
    - root_path_integrity is defined and root_path_integrity.stdout == ""
  tags:
    - rule_6.2.6
    - low
    - level1
    - low

- name: "SCORED | 6.2.6 | PATCH | Ensure root PATH Integrity"
  file:
    path: /opt/6.2.6.sh
    owner: root
    group: root
    state: absent
  changed_when: no
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
  tags:
    - rule_6.2.6
    - low
    - level1
    - low

- name: "SCORED | 6.2.7 | PATCH | Ensure all users' home directories exist"
  copy:
    src: scripts/6.2.7.sh
    dest: /opt/6.2.7.sh
    owner: root
    group: root
    mode: 0700
  changed_when: no
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
  tags:
    - rule_6.2.7
    - low
    - level1
    - low

- name: "SCORED | 6.2.7 | PATCH | Ensure all users' home directories exist"
  shell: /opt/6.2.7.sh
  args:
    executable: /bin/bash
  register: home_directories_exist
  no_log: yes
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
  tags:
    - rule_6.2.7
    - low
    - level1
    - low

# - name: "SCORED | 6.2.7 | PATCH | Ensure all users' home directories exist"
#   debug:
#     var: home_directories_exist.stdout_lines
#   when:
#     - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
#     - home_directories_exist is defined and home_directories_exist.stdout != ""
#   tags:
#     - rule_6.2.7
#     - low
#     - level1
#     - low

- name: "SCORED | 6.2.7 | PATCH | Ensure all users' home directories exist"
  debug:
    msg: "PASS | 6.2.7 | All users' home directories exist."
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
    - home_directories_exist is defined and home_directories_exist.stdout == ""
  tags:
    - rule_6.2.7
    - low
    - level1
    - low

- name: "SCORED | 6.2.7 | PATCH | Ensure all users' home directories exist"
  file:
    path: /opt/6.2.7.sh
    owner: root
    group: root
    state: absent
  changed_when: no
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
  tags:
    - rule_6.2.7
    - low
    - level1
    - low

- name: "SCORED | 6.2.8 | PATCH | Ensure users' home directories permissions are 750 or more restrictive"
  copy:
    src: scripts/6.2.8.sh
    dest: /opt/6.2.8.sh
    owner: root
    group: root
    mode: 0700
  changed_when: no
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
    - amazonlinux2cis_modify_user_homes is defined and amazonlinux2cis_modify_user_homes
  tags:
    - rule_6.2.8
    - level1
    - patch
    - low

- name: "SCORED | 6.2.8 | PATCH | Ensure users' home directories permissions are 750 or more restrictive"
  shell: /opt/6.2.8.sh
  args:
    executable: /bin/bash
  register: home_directories_permissions
  no_log: yes
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
    - amazonlinux2cis_modify_user_homes is defined and amazonlinux2cis_modify_user_homes
  tags:
    - rule_6.2.8
    - level1
    - patch
    - low

# - name: "SCORED | 6.2.8 | PATCH | Ensure users' home directories permissions are 750 or more restrictive"
#   debug:
#     var: home_directories_permissions.stdout_lines
#   when:
#     - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
#     - amazonlinux2cis_modify_user_homes is defined and amazonlinux2cis_modify_user_homes
#   tags:
#     - rule_6.2.8
#     - level1
#     - patch
#     - low

- name: "SCORED | 6.2.8 | PATCH | Ensure users' home directories permissions are 750 or more restrictive"
  debug:
    msg: "PASS | 6.2.8 | Users' home directories permissions are 750 or more restrictive."
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
    - home_directories_permissions is defined and home_directories_permissions.stdout == ""
    - amazonlinux2cis_modify_user_homes is defined and amazonlinux2cis_modify_user_homes
  tags:
    - rule_6.2.8
    - level1
    - patch
    - low

- name: "SCORED | 6.2.8 | PATCH | Ensure users' home directories permissions are 750 or more restrictive"
  file:
    path: /opt/6.2.8.sh
    owner: root
    group: root
    state: absent
  changed_when: no
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
    - amazonlinux2cis_modify_user_homes is defined and amazonlinux2cis_modify_user_homes
  tags:
    - rule_6.2.8
    - level1
    - patch
    - low

- name: "SCORED | 6.2.9 | PATCH | Ensure users own their home directories"
  copy:
    src: scripts/6.2.9.sh
    dest: /opt/6.2.9.sh
    owner: root
    group: root
    mode: 0700
  changed_when: no
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
  tags:
    - rule_6.2.9
    - level1
    - patch
    - low

- name: "SCORED | 6.2.9 | PATCH | Ensure users own their home directories"
  shell: /opt/6.2.9.sh
  args:
    executable: /bin/bash
  register: home_directories_own
  no_log: yes
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
  tags:
    - rule_6.2.9
    - level1
    - patch
    - low

# - name: "SCORED | 6.2.9 | PATCH | Ensure users own their home directories"
#   debug:
#     var: home_directories_own.stdout_lines
#   when:
#     - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
#   tags:
#     - rule_6.2.9
#     - level1
#     - patch

- name: "SCORED | 6.2.9 | PATCH | Ensure users own their home directories"
  debug:
    msg: "PASS | 6.2.9 | Users' own their home directories."
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
    - home_directories_own is defined and home_directories_own.stdout == ""
  tags:
    - rule_6.2.9
    - level1
    - patch
    - low

- name: "SCORED | 6.2.9 | PATCH | Ensure users own their home directories"
  file:
    path: /opt/6.2.9.sh
    owner: root
    group: root
    state: absent
  changed_when: no
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
  tags:
    - rule_6.2.9
    - level1
    - patch
    - low

- name: "SCORED | 6.2.10 | PATCH | Ensure users' dot files are not group or world writable"
  copy:
    src: scripts/6.2.10.sh
    dest: /opt/6.2.10.sh
    owner: root
    group: root
    mode: 0700
  changed_when: no
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
  tags:
    - rule_6.2.10
    - patch
    - level1
    - low

- name: "SCORED | 6.2.10 | PATCH | Ensure users' dot files are not group or world writable"
  shell: /opt/6.2.10.sh
  args:
    executable: /bin/bash
  register: user_dot_files
  no_log: yes
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
  tags:
    - rule_6.2.10
    - patch
    - level1
    - low

# - name: "SCORED | 6.2.10 | PATCH | Ensure users' dot files are not group or world writable"
#   debug:
#     var: user_dot_files.stdout_lines
#   when:
#     - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
#   tags:
#     - rule_6.2.10
#     - level1
#     - patch
#     - low

- name: "SCORED | 6.2.10 | PATCH | Ensure users' dot files are not group or world writable"
  debug:
    msg: "PASS | 6.2.10 | Users' dot files are not group or world writable."
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
    - user_dot_files is defined and user_dot_files.stdout == ""
  tags:
    - rule_6.2.10
    - level1
    - patch
    - low

- name: "SCORED | 6.2.10 | PATCH | Ensure users' dot files are not group or world writable"
  file:
    path: /opt/6.2.10.sh
    owner: root
    group: root
    state: absent
  changed_when: no
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
  tags:
    - rule_6.2.10
    - patch
    - level1
    - low

- name: "SCORED | 6.2.11 | PATCH | Ensure no users have .forward files"
  file:
    state: absent
    dest: "~{{ item }}/.forward"
  with_items: "{{ users.stdout_lines }}"
  no_log: True
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
    - amazonlinux2cis_modify_dot_forward_files is defined and amazonlinux2cis_modify_dot_forward_files
  tags:
    - rule_6.2.11
    - patch
    - level1
    - low

- name: "SCORED | 6.2.12 | PATCH | Ensure no users have .netrc files"
  file:
    state: absent
    dest: "~{{ item }}/.netrc"
  with_items: "{{ users.stdout_lines }}"
  no_log: True
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
    - amazonlinux2cis_modify_dot_netrc_files is defined and amazonlinux2cis_modify_dot_netrc_files
  tags:
    - rule_6.2.12
    - patch
    - level1
    - low

- name: "SCORED | 6.2.13 | PATCH | Ensure users' .netrc files are not group or world accessible"
  copy:
    src: scripts/6.2.13.sh
    dest: /opt/6.2.13.sh
    owner: root
    group: root
    mode: 0700
  changed_when: no
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
    - amazonlinux2cis_modify_dot_netrc_files_group is defined and amazonlinux2cis_modify_dot_netrc_files_group
  tags:
    - rule_6.2.13
    - patch
    - level1
    - low

- name: "SCORED | 6.2.13 | PATCH | Ensure users' .netrc files are not group or world accessible"
  shell: /opt/6.2.13.sh
  args:
    executable: /bin/bash
  register: dot_netrc_files
  no_log: yes
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
    - amazonlinux2cis_modify_dot_netrc_files_group is defined and amazonlinux2cis_modify_dot_netrc_files_group
  tags:
    - rule_6.2.13
    - patch
    - level1
    - low

# - name: "SCORED | 6.2.13 | PATCH | Ensure users' .netrc files are not group or world accessible"
#   debug:
#     var: dot_netrc_files.stdout_lines
#  when:
#    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
#    - amazonlinux2cis_modify_dot_netrc_files_group is defined and amazonlinux2cis_modify_dot_netrc_files_group
#   tags:
#     - rule_6.2.13
#     - patch
#     - level1
#     - low

- name: "SCORED | 6.2.13 | PATCH | Ensure users' .netrc files are not group or world accessible"
  debug:
    msg: "PASS | 6.2.13 | Users' .netrc files are not group or world accessible."
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
    - amazonlinux2cis_modify_dot_netrc_files_group is defined and amazonlinux2cis_modify_dot_netrc_files_group
    - dot_netrc_files is defined and dot_netrc_files.stdout == ""
  tags:
    - rule_6.2.13
    - patch
    - level1
    - low

- name: "SCORED | 6.2.13 | PATCH | Ensure users' .netrc Files are not group or world accessible"
  file:
    path: /opt/6.2.13.sh
    owner: root
    group: root
    state: absent
  changed_when: no
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
    - amazonlinux2cis_modify_dot_netrc_files_group is defined and amazonlinux2cis_modify_dot_netrc_files_group
  tags:
    - rule_6.2.13
    - patch
    - level1
    - low

- name: "SCORED | 6.2.14 | PATCH | Ensure no users have .rhosts files"
  file:
    state: absent
    dest: "~{{ item }}/.rhosts"
  with_items: "{{ users.stdout_lines }}"
  no_log: yes
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
    - amazonlinux2cis_modify_dot_rhosts_files is defined and amazonlinux2cis_modify_dot_rhosts_files
  tags:
    - rule_6.2.14
    - patch
    - level1
    - low

- name: "SCORED | 6.2.15 | PATCH | Ensure all groups in /etc/passwd exist in /etc/group"
  copy:
    src: scripts/6.2.15.sh
    dest: /opt/6.2.15.sh
    owner: root
    group: root
    mode: 0700
  changed_when: no
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
  tags:
    - rule_6.2.15
    - patch
    - level1
    - low

- name: "SCORED | 6.2.15 | PATCH | Ensure all groups in /etc/passwd exist in /etc/group"
  shell: /opt/6.2.15.sh
  args:
    executable: /bin/bash
  register: check_groups_in_passwd
  no_log: yes
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
  tags:
    - rule_6.2.15
    - patch
    - level1
    - low

# - name: "SCORED | 6.2.15 | PATCH | Ensure all groups in /etc/passwd exist in /etc/group"
#   debug:
#     var: check_groups_in_passwd.stdout_lines
#  when:
#    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
#   tags:
#     - rule_6.2.15
#     - patch
#     - level1
#     - low

- name: "SCORED | 6.2.15 | PATCH | Ensure all groups in /etc/passwd exist in /etc/group"
  debug:
    msg: "PASS | 6.2.15 | All groups exist in /etc/group."
  when: 
    - check_groups_in_passwd is defined and check_groups_in_passwd.stdout == ""
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
  tags:
    - rule_6.2.15
    - patch
    - level1
    - low

- name: "SCORED | 6.2.15 | PATCH | Ensure all groups in /etc/passwd exist in /etc/group"
  file:
    path: /opt/6.2.15.sh
    owner: root
    group: root
    state: absent
  changed_when: no
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
  tags:
    - rule_6.2.15
    - patch
    - level1
    - low

- name: "SCORED | 6.2.16 | PATCH | Ensure no duplicate UIDs exist"
  copy:
    src: scripts/6.2.16.sh
    dest: /opt/6.2.16.sh
    owner: root
    group: root
    mode: 0700
  changed_when: no
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
  tags:
    - rule_6.2.16
    - patch
    - level1
    - low

- name: "SCORED | 6.2.16 | PATCH | Ensure no duplicate UIDs exist"
  shell: /opt/6.2.16.sh
  args:
    executable: /bin/bash
  register: duplicate_uids
  no_log: yes
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
  tags:
    - rule_6.2.16
    - patch
    - level1
    - low

# - name: "SCORED | 6.2.16 | PATCH | Ensure no duplicate UIDs exist"
#   debug:
#     var: duplicate_uids.stdout_lines
#   when:
#     - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
#   tags:
#     - rule_6.2.16
#     - patch
#     - level1
#     - low

- name: "SCORED | 6.2.16 | PATCH | Ensure no duplicate UIDs exist"
  debug:
    msg: "PASS | 6.2.16 | No duplicate UIDs exist."
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
    - duplicate_uids is defined and duplicate_uids.stdout == ""
  tags:
    - rule_6.2.16
    - patch
    - level1
    - low

- name: "SCORED | 6.2.16 | PATCH | Ensure no duplicate UIDs exist"
  file:
    path: /opt/6.2.16.sh
    owner: root
    group: root
    state: absent
  changed_when: no
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
  tags:
    - rule_6.2.16
    - patch
    - level1
    - low

- name: "SCORED | 6.2.17 | PATCH | Ensure no duplicate GIDs exist"
  copy:
    src: scripts/6.2.17.sh
    dest: /opt/6.2.17.sh
    owner: root
    group: root
    mode: 0700
  changed_when: no
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
  tags:
    - rule_6.2.17
    - patch
    - level1
    - low

- name: "SCORED | 6.2.17 | PATCH | Ensure no duplicate GIDs exist"
  shell: /opt/6.2.17.sh
  args:
    executable: /bin/bash
  register: duplicate_gids
  no_log: yes
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
  tags:
    - rule_6.2.17
    - patch
    - level1
    - low

# - name: "SCORED | 6.2.17 | PATCH | Ensure no duplicate GIDs exist"
#   debug:
#     var: duplicate_gids.stdout_lines
#   when:
#     - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
#   tags:
#     - rule_6.2.17
#     - patch
#     - level1
#     - low

- name: "SCORED | 6.2.17 | PATCH | Ensure no duplicate GIDs exist"
  debug:
    msg: "PASS | 6.2.17 | No duplicate GIDs exist."
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
    - duplicate_gids is defined and duplicate_gids.stdout == ""
  tags:
    - rule_6.2.17
    - patch
    - level1
    - low

- name: "SCORED | 6.2.17 | PATCH | Ensure no duplicate GIDs exist"
  file:
    path: /opt/6.2.17.sh
    owner: root
    group: root
    state: absent
  changed_when: no
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
  tags:
    - rule_6.2.17
    - patch
    - level1
    - low

- name: "SCORED | 6.2.18 | PATCH | Ensure no duplicate user names exist"
  copy:
    src: scripts/6.2.18.sh
    dest: /opt/6.2.18.sh
    owner: root
    group: root
    mode: 0700
  changed_when: no
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
  tags:
    - rule_6.2.18
    - patch
    - level1
    - low

- name: "SCORED | 6.2.18 | PATCH | Ensure no duplicate user names exist"
  shell: /opt/6.2.18.sh
  args:
    executable: /bin/bash
  register: duplicate_users
  no_log: yes
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
  tags:
    - rule_6.2.18
    - patch
    - level1
    - low

# - name: "SCORED | 6.2.18 | PATCH | Ensure no duplicate user names exist"
#   debug:
#     var: duplicate_users.stdout_lines
#   when:
#     - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
#   tags:
#     - rule_6.2.18
#     - patch
#     - level1
#     - low

- name: "SCORED | 6.2.18 | PATCH | Ensure no duplicate user names exist"
  debug:
    msg: "PASS | 6.2.18 | No duplicate user names exist"
  when: duplicate_users.stdout == ""
  tags:
    - rule_6.2.18
    - patch
    - level1
    - low

- name: "SCORED | 6.2.18 | PATCH | Ensure no duplicate user names exist"
  file:
    path: /opt/6.2.18.sh
    owner: root
    group: root
    state: absent
  changed_when: no
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
  tags:
    - rule_6.2.18
    - patch
    - level1
    - low

- name: "SCORED | 6.2.19 | PATCH | Ensure no duplicate group names exist"
  copy:
    src: scripts/6.2.19.sh
    dest: /opt/6.2.19.sh
    owner: root
    group: root
    mode: 0700
  changed_when: no
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
  tags:
    - rule_6.2.19
    - patch
    - level1
    - low

- name: "SCORED | 6.2.19 | PATCH | Ensure no duplicate group names exist"
  shell: /opt/6.2.19.sh
  args:
    executable: /bin/bash
  register: duplicate_groups
  no_log: yes
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
  tags:
    - rule_6.2.19
    - patch
    - level1
    - low

# - name: "SCORED | 6.2.19 | PATCH | Ensure no duplicate group names exist"
#   debug:
#     var: duplicate_groups.stdout_lines
#   when:
#     - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
#   tags:
#     - rule_6.2.19
#     - patch
#     - level1
#     - low

- name: "SCORED | 6.2.19 | PATCH | Ensure no duplicate group names exist"
  debug:
    msg: "PASS | 6.2.19 | No duplicate group names exist"
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
    - duplicate_groups is defined and duplicate_groups.stdout == ""
  tags:
    - rule_6.2.19
    - patch
    - level1
    - low

- name: "SCORED | 6.2.19 | PATCH | Ensure no duplicate group names exist"
  file:
    path: /opt/6.2.19.sh
    owner: root
    group: root
    state: absent
  changed_when: no
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
  tags:
    - rule_6.2.19
    - patch
    - level1
    - low
