## START COPYRIGHT NOTICE ##
# AmazonLinux2-CIS Ansible Script
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at https://mozilla.org/MPL/2.0/.
## END COPYRIGHT NOTICE ##
- name: "SCORED | 1.1.1.1 | PATCH | Ensure mounting of cramfs filesystems is disabled"
  lineinfile:
    dest: /etc/modprobe.d/CIS.conf
#   dest: /etc/modprobe.d/cramfs.conf
    regexp: "^(#)?install cramfs(\\s|$)"
    line: "install cramfs /bin/true"
    create: yes
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
  tags:
    - level1
    - scored
    - patch
    - rule_1.1.1.1
    - cramfs

- name: "SCORED | 1.1.1.1 | PATCH | Ensure mounting of cramfs filesystems is disabled"
  command: rmmod cramfs
  register: result
  failed_when: "result.rc|float < 1"
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
  tags:
    - level1
    - scored
    - patch
    - rule_1.1.1.1
    - cramfs

- name: "SCORED | 1.1.1.2 | PATCH | Ensure mounting of hfs filesystems is disabled"
  lineinfile:
    dest: /etc/modprobe.d/CIS.conf
#   dest: /etc/modprobe.d/hfs.conf
    regexp: "^(#)?install hfs(\\s|$)"
    line: "install hfs /bin/true"
    create: yes
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
  tags:
    - level1
    - scored
    - patch
    - rule_1.1.1.2
    - hfs

- name: "SCORED | 1.1.1.2 | PATCH | Ensure mounting of hfs filesystems is disabled"
  command: rmmod hfs
  register: result
  failed_when: "result.rc|float < 1"
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
  tags:
    - level1
    - scored
    - patch
    - rule_1.1.1.2
    - hfs

- name: "SCORED | 1.1.1.3 | PATCH | Ensure mounting of hfsplus filesystems is disabled"
  lineinfile:
    dest: /etc/modprobe.d/CIS.conf
#    dest: /etc/modprobe.d/hfsplus.conf
    regexp: "^(#)?install hfsplus(\\s|$)"
    line: "install hfsplus /bin/true"
    create: yes
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
  tags:
    - level1
    - scored
    - patch
    - rule_1.1.1.3
    - hfsplus

- name: "SCORED | 1.1.1.3 | PATCH | Ensure mounting of hfsplus filesystems is disabled"
  command: rmmod hfsplus
  register: result
  failed_when: "result.rc|float < 1"
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
  tags:
      - level1
      - scored
      - patch
      - rule_1.1.1.3
      - hfsplus

- name: "SCORED | 1.1.1.4 | PATCH | Ensure mounting of squashfs filesystems is disabled"
  lineinfile:
    dest: /etc/modprobe.d/CIS.conf
#    dest: /etc/modprobe.d/squashfs.conf
    regexp: "^(#)?install squashfs(\\s|$)"
    line: "install squashfs /bin/true"
    create: yes
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
  tags:
    - level1
    - scored
    - patch
    - rule_1.1.1.4
    - squashfs

- name: "SCORED | 1.1.1.4 | PATCH | Ensure mounting of squashfs filesystems is disabled"
  command: rmmod squashfs
  register: result
  failed_when: "result.rc|float < 1"
  changed_when:
    - result.rc|float == 1
    - '"ERROR" in result.stderr'
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
  tags:
    - level1
    - scored
    - patch
    - rule_1.1.1.4
    - squashfs

- name: "SCORED | 1.1.1.5 | PATCH | Ensure mounting of udf filesystems is disabled"
  lineinfile:
    dest: /etc/modprobe.d/CIS.conf
#   dest: /etc/modprobe.d/udf.conf
    regexp: "^(#)?install udf(\\s|$)"
    line: "install udf /bin/true"
    create: yes
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
  tags:
    - level1
    - scored
    - patch
    - rule_1.1.1.5
    - udf

- name: "SCORED | 1.1.1.5 | PATCH | Ensure mounting of udf filesystems is disabled"
  command: rmmod udf
  register: result
  failed_when: "result.rc|float < 1"
  changed_when:
    - result.rc|float == 1
    - '"ERROR" in result.stderr'
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
  tags:
    - level1
    - scored
    - patch
    - rule_1.1.1.5
    - udf

- name: 1.1.2 Ensure separate partition exists for /tmp (Scored)
  command: grep '\s/tmp\s' /etc/fstab
  register: tmp_partition
  failed_when: tmp_partition.rc == 1
  changed_when: false
  ignore_errors: true
  check_mode: no
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
  tags:
    - level1
    - rule_1
    - rule_1.1
    - rule_1.1.2
    - low

- name: PRE 1.1.3 Install dependencies for mountopts-module | PART ONE
  yum:
    name: python-pip
    state: present
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1 
    - tmp_partition.rc == 0
  tags:
    - level1
    - rule_1
    - rule_1.1
    - rule_1.1.3
    - low

- name: PRE 1.1.3 Install dependencies for mountopts-module | PART TWO
  pip:
    name: fstab
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
    - tmp_partition.rc == 0
  tags:
    - level1
    - rule_1
    - rule_1.1
    - rule_1.1.3
    - low

- name: PRE 1.1.3 Install dependencies for mountopts-module | PART THREE
  mountopts:
    name: /tmp
    option: nodev
    state: present
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
    - tmp_partition.rc == 0
  tags:
    - level1
    - rule_1
    - rule_1.1
    - rule_1.1.3
    - low

- shell: mount | grep /tmp|grep nodev
  register: mount_tmp_output
  failed_when: false
  ignore_errors: true
  check_mode: no
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
  tags:
    - level1
    - rule_1
    - rule_1.1
    - rule_1.1.3
    - low

- name: 1.1.3 Ensure nodev option set on /tmp partition (Scored)
  command: mount -o remount,nodev /tmp
  ignore_errors: true
  check_mode: no
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
    - tmp_partition.rc == 0 and mount_tmp_output.rc != 0
  tags:
    - level1
    - rule_1
    - rule_1.1
    - rule_1.1.3
    - low

- yum:
    name: python-pip
    state: present
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
    - tmp_partition.rc == 0
  tags:
    - level1
    - rule_1
    - rule_1.1
    - rule_1.1.4
    - low

- name: install dependencies for mountopts-module
  pip:
    name: fstab
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
    - tmp_partition.rc == 0
  tags:
    - level1
    - rule_1
    - rule_1.1
    - rule_1.1.4
    - low

- mountopts:
    name: /tmp
    option: nosuid
    state: present
  check_mode: no
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
    - tmp_partition.rc == 0
  tags:
    - level1
    - rule_1
    - rule_1.1
    - rule_1.1.4
    - low

- shell: mount | grep /tmp|grep nosuid
  register: mount_tmp_output
  failed_when: false
  ignore_errors: true
  changed_when: false
  check_mode: no
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
  tags:
    - level1
    - rule_1
    - rule_1.1
    - rule_1.1.4
    - low

- name: 1.1.4 Ensure nosuid option set on /tmp partition (Scored)
  command: mount -o remount,nosuid /tmp
  ignore_errors: true
  check_mode: no
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
    - tmp_partition.rc == 0 and mount_tmp_output.rc != 0
  tags:
    - level1
    - rule_1
    - rule_1.1
    - rule_1.1.4
    - low

- yum:
    name: python-pip
    state: present
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
    - tmp_partition.rc == 0
  tags:
    - level1
    - rule_1
    - rule_1.1
    - rule_1.1.5
    - low

- name: install dependencies for mountopts-module
  pip:
    name: fstab
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
    - tmp_partition.rc == 0
  tags:
    - level1
    - rule_1
    - rule_1.1
    - rule_1.1.5
    - low

- mountopts:
    name: /tmp
    option: noexec
    state: present
  check_mode: no
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
    - tmp_partition.rc == 0
  tags:
    - level1
    - rule_1
    - rule_1.1
    - rule_1.1.5
    - low

- shell: mount | grep /tmp|grep noexec
  register: mount_tmp_output
  failed_when: false
  ignore_errors: true
  changed_when: false
  check_mode: no
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
  tags:
    - level1
    - rule_1
    - rule_1.1
    - rule_1.1.5
    - low

- name: 1.1.5 Ensure nosuid option set on /tmp partition (Scored)
  command: mount -o remount,noexec /tmp
  ignore_errors: true
  check_mode: no
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
    - tmp_partition.rc == 0 and mount_tmp_output.rc != 0
  tags:
    - level1
    - rule_1
    - rule_1.1
    - rule_1.1.
    - low

- name: 1.1.6 Ensure separate partition exists for /var (Scored)
  command: grep '\s/var\s' /etc/fstab
  register: var_partition
  failed_when: var_partition.rc == 1
  changed_when: false
  ignore_errors: true
  check_mode: no
  when:
    - amazonlinux2cis_level2 is defined and amazonlinux2cis_level2
  tags:
    - level2
    - rule_1
    - rule_1.1
    - rule_1.1.6
    - low

- yum:
    name: python-pip
    state: present
  check_mode: no
  when:
    - amazonlinux2cis_level2 is defined and amazonlinux2cis_level2
    - var_partition.rc == 0
  tags:
    - level2
    - rule_1
    - rule_1.1
    - rule_1.1.6
    - low

- name: install dependencies for mountopts-module
  pip:
    name: fstab
  when:
    - amazonlinux2cis_level2 is defined and amazonlinux2cis_level2
    - var_partition.rc == 0
  tags:
    - level2
    - rule_1
    - rule_1.1
    - rule_1.1.6
    - low

- mountopts:
    name: /var
    option: nosuid
    state: present
  when:
    - amazonlinux2cis_level2 is defined and amazonlinux2cis_level2
    - var_partition.rc == 0
  tags:
    - level2
    - rule_1
    - rule_1.1
    - rule_1.1.6
    - low

- mountopts:
    name: /var
    option: noexec
    state: present
  when:
    - amazonlinux2cis_level2 is defined and amazonlinux2cis_level2
    - var_partition.rc == 0
  tags:
    - level2
    - rule_1
    - rule_1.1
    - rule_1.1.6
    - low

- mountopts:
    name: /var
    option: nodev
    state: present
  when:
    - amazonlinux2cis_level2 is defined and amazonlinux2cis_level2
    - var_partition.rc == 0
  tags:
    - level2
    - rule_1
    - rule_1.1
    - rule_1.1.6
    - low

- name: "SCORED | 1.1.6 | PATCH | Ensure separate partition exists for /var"
  shell: mount | grep "on /var "
  register: var_mounted
  changed_when: no
  failed_when: no
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
  tags:
    - level2
    - rule_1
    - rule_1.1
    - rule_1.1.6
    - low

- name: "SCORED | 1.1.7 | PATCH | Ensure separate partition exists for /var/tmp"
  shell: mount | grep "on /var/tmp "
  register: var_tmp_mounted
  changed_when: no
  failed_when: no
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1 or amazonlinux2cis_level2 is defined and amazonlinux2cis_level2
  tags:
      - level2
      - scored
      - patch
      - rule_1.1.7
      - medium

- name: "SCORED | 1.1.8 | PATCH | Ensure nodev option set on /var/tmp partition\n
         SCORED | 1.1.9 | PATCH | Ensure nosuid option set on /var/tmp partition\n
         SCORED | 1.1.10 | PATCH | Ensure noexec option set on /var/tmp partition"
  mount:
    path: /var/tmp
    opts: "rw,nosuid,nodev,noexec,relatime"
    fstype: "tmpfs"
    src: tmpfs
    state: mounted
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
    - var_tmp_mounted is defined
    - var_tmp_mounted.rc|float == 0
  tags:
    - level1
    - scored
    - patch
    - rule_1.1.8
    - rule_1.1.9
    - rule_1.1.10
    - low

#- name: "SCORED | 1.1.8 | PATCH | Ensure nodev option set on /var/tmp partition"
#  command: /bin/true
#  changed_when: no
#  tags:
#      - level1
#      - scored
#      - patch
#      - rule_1.1.8
#      - rule_1.1.9
#      - rule_1.1.10
#      - low

#- name: "SCORED | 1.1.9 | PATCH | Ensure nosuid option set on /var/tmp partition"
#  command: /bin/true
#  changed_when: no
#  tags:
#      - level1
#      - scored
#      - patch
#      - rule_1.1.9
#      - low
#
#- name: "SCORED | 1.1.10 | PATCH | Ensure noexec option set on /var/tmp partition"
#  command: /bin/true
#  changed_when: no
#  tags:
#      - level1
#      - scored
#      - patch
#      - rule_1.1.10
#      - low

- name: "SCORED | 1.1.11 | PATCH | Ensure separate partition exists for /var/log"
  shell: mount | grep "on /var/log "
  register: var_log_mounted
  changed_when: no
  failed_when: no
  when:
    - amazonlinux2cis_level2 is defined and amazonlinux2cis_level2
  tags:
      - level2
      - scored
      - patch
      - rule_1.1.11
      - medium

- name: "SCORED | 1.1.12 | PATCH | Ensure separate partition exists for /var/log/audit"
  shell: mount | grep "on /var/log/audit "
  register: var_log_audit_mounted
  changed_when: no
  failed_when: no
  when:
    - amazonlinux2cis_level2 is defined and amazonlinux2cis_level2
  tags:
      - level2
      - scored
      - patch
      - rule_1.1.12
      - medium

- name: "SCORED | 1.1.13 | PATCH | Ensure separate partition exists for /home"
  shell: mount | grep "on /home "
  register: home_mounted
  changed_when: no
  failed_when: no
  when:
    - amazonlinux2cis_level2 is defined and amazonlinux2cis_level2 or amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
  tags:
      - level2
      - scored
      - patch
      - rule_1.1.13
      - medium

- name: "SCORED | 1.1.14 | PATCH | Ensure nodev option set on /home partition"
  mount:
    path: /home
    opts: nodev
    state: mounted
    fstype: "ext4"
    src: home
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
    - home_mounted is defined
    - home_mounted.rc|float == 0
  tags:
      - level1
      - patch
      - rule_1.1.14
      - low

- name: "SCORED | 1.1.15 | PATCH | Ensure nodev option set on /dev/shm partition\n
         SCORED | 1.1.16 | PATCH | Ensure nosuid option set on /dev/shm partition\n
         SCORED | 1.1.17 | PATCH | Ensure noexec option set on /dev/shm partition"
  mount:
    name: /dev/shm
    src: tmpfs
    state: mounted
    fstype: tmpfs
    opts: "defaults,nodev,nosuid,noexec"
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
  tags:
    - level1
    - scored
    - patch
    - rule_1.1.15
    - rule_1.1.16
    - rule_1.1.17
    - low

- name: "SCORED | 1.1.18 | PATCH | Ensure sticky bit is set on all world-writable directories"
  shell: df --local -P | awk {'if (NR!=1) print $6'} | xargs -I '{}' find '{}' -xdev -type d -perm -0002 2>/dev/null | xargs chmod a+t
  #when: sticky_bit_on_worldwritable_dirs_audit.rc == '0'
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
  tags:
    - level1
    - patch
    - rule_1.1.18
    - low

- name: "SCORED | 1.1.19 | PATCH | Disable Automounting"
  systemd:
    name: autofs
    enabled: no
  ignore_errors: true 
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
    - amazonlinux2cis_allow_autofs == false
    - autofs_service_status.stdout == "loaded"
  tags:
    - level1
    - patch
    - rule_1.1.19
    - low

- name: "NOTSCORED | 1.2.1 | PATCH | Ensure package manager repositories are configured"
  command: /bin/true
  changed_when: no
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
  tags:
    - level1
    - notscored
    - patch
    - rule_1.2.1
    - low

- name: "NOTSCORED | 1.2.2 | PATCH | Ensure GPG keys are configured"
  command: /bin/true
  changed_when: no
  tags:
    - level1
    - notscored
    - patch
    - rule_1.2.2
    - low

- name: "SCORED | 1.2.3 | PATCH | Ensure gpgcheck is globally activated"
  replace:
    name: /etc/yum.conf
    regexp: "^gpgcheck=0"
    replace: "gpgcheck=1"
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
  tags:
    - level1
    - scored
    - patch
    - rule_1.2.3
    - low

- name: "SCORED | 1.2.3 | PATCH | Ensure gpgcheck is globally activated"
  find:
    paths: /etc/yum.repos.d
    patterns: "*.repo"
  register: yum_repos
  changed_when: no
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
  tags:
    - level1
    - scored
    - patch
    - rule_1.2.3
    - low

- name: "SCORED | 1.2.3 | PATCH | Ensure gpgcheck is globally activated"
  replace:
    name: "{{ item.path }}"
    regexp: "^gpgcheck=0"
    replace: "gpgcheck=1"
  with_items:
    - "{{ yum_repos.files }}"
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
  tags:
    - level1
    - scored
    - patch
    - rule_1.2.3
    - low

- name: "SCORED | 1.3.1 | PATCH | Ensure AIDE is installed"
  yum:
    name: aide
    state: present
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
  tags:
    - level1
    - scored
    - aide
    - patch
    - rule_1.3.1
    - medium

- name: "SCORED | 1.3.1 | PATCH | Ensure AIDE is installed"
  command: /usr/sbin/aide --init
  async: 45
  poll: 0
  check_mode: no
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
    - amazonlinux2cis_config_aide is defined and amazonlinux2cis_config_aide
  tags:
    - level1
    - scored
    - aide
    - patch
    - rule_1.3.1
    - medium

- name: "SCORED | 1.3.1 | PATCH | Ensure AIDE is installed"
  command: mv /var/lib/aide/aide.db.new.gz /var/lib/aide/aide.db.gz
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
    - amazonlinux2cis_config_aide is defined and amazonlinux2cis_config_aide
  tags:
    - level1
    - scored
    - aide
    - patch
    - rule_1.3.1
    - medium


- name: "SCORED | 1.3.2 | PATCH | Ensure filesystem integrity is regularly checked"
  cron:
    name: Run AIDE integrity check weekly
    cron_file: "{{ amazonlinux2cis_aide_cron['cron_file'] }}"
    user: "{{ amazonlinux2cis_aide_cron['cron_user'] }}"
    minute: "{{ amazonlinux2cis_aide_cron['aide_minute'] | default('0') }}"
    hour: "{{ amazonlinux2cis_aide_cron['aide_hour'] | default('5') }}"
    day: "{{ amazonlinux2cis_aide_cron['aide_day'] | default('*') }}"
    month: "{{ amazonlinux2cis_aide_cron['aide_month'] | default('*') }}"
    weekday: "{{ amazonlinux2cis_aide_cron['aide_weekday'] | default('*') }}"
    job: "{{ amazonlinux2cis_aide_cron['aide_job'] }}"
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
  tags:
    - level1
    - scored
    - aide
    - file_integrity
    - patch
    - rule_1.3.2
    - low

- name: "SCORED | 1.3.2 | PATCH | Ensure filesystem integrity is regularly checked"
  cron:
    name: Run AIDE integrity check weekly
    cron_file: "/var/spool/cron/root"
    user: "{{ amazonlinux2cis_aide_cron['cron_user'] }}"
    minute: "{{ amazonlinux2cis_aide_cron['aide_minute'] | default('0') }}"
    hour: "{{ amazonlinux2cis_aide_cron['aide_hour'] | default('5') }}"
    day: "{{ amazonlinux2cis_aide_cron['aide_day'] | default('*') }}"
    month: "{{ amazonlinux2cis_aide_cron['aide_month'] | default('*') }}"
    weekday: "{{ amazonlinux2cis_aide_cron['aide_weekday'] | default('*') }}"
    job: "{{ amazonlinux2cis_aide_cron['aide_job'] }}"
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
  tags:
    - level1
    - scored
    - aide
    - file_integrity
    - patch
    - rule_1.3.2
    - low

- name: "SCORED | 1.4.1 | PATCH | Ensure permissions on bootloader config are configured"
  stat:
    path: /boot/grub2/grub.cfg
#   path: /boot/grub/menu.lst
  register: grub_cfg
  tags:
    - level1
    - scored
    - grub
    - patch
    - rule_1.4.1
    - low

- name: "SCORED | 1.4.1 | PATCH | Ensure permissions on bootloader config are configured"
  file:
    path: "{{ grub_cfg.stat.lnk_source }}"
    owner: root
    group: root
    mode: "og-rwx"
    state: file
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
    - grub_cfg is defined
    - grub_cfg.stat.exists and grub_cfg.stat.islnk
  tags:
    - level1
    - scored
    - grub
    - patch
    - rule_1.4.1
    - low

- name : "SCORED | 1.4.2 | PATCH | Ensure authentication required for single user mode"
  lineinfile:
    state: present
    dest: "{{ item }}"
    regexp: "^ExecStart="
    line: "ExecStart=-/bin/sh -c \"/sbin/sulogin; /usr/bin/systemctl --fail --no-block default\""
  with_items:
    - /usr/lib/systemd/system/rescue.service
    - /usr/lib/systemd/system/emergency.service
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
  tags:
    - level1
    - patch
    - rule_1.4.2
    - low

- name: "SCORED | 1.5.1 | PATCH | Ensure core dumps are restricted"
  lineinfile:
    state: present
    dest: /etc/security/limits.conf
    regexp: '^#?\\*.*core'
    line: '* hard core 0'
    insertbefore: '^# End of file'
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
  tags:
    - level1
    - scored
    - limits
    - patch
    - rule_1.5.1
    - low

- name: "SCORED | 1.5.1 | PATCH | Ensure core dumps are restricted"
  sysctl:
    name: fs.suid_dumpable
    value: 0
    state: present
    reload: yes
    sysctl_set: yes
    ignoreerrors: yes
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
  tags:
    - level1
    - scored
    - sysctl
    - patch
    - rule_1.5.1
    - low

- name: "SCORED | 1.5.2 | PATCH | Ensure address space layout randomization (ASLR) is enabled"
  sysctl:
    name: kernel.randomize_va_space
    value: 2
    state: present
    reload: yes
    sysctl_set: yes
    ignoreerrors: yes
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
  tags:
    - level1
    - scored
    - patch
    - rule_1.5.2
    - low

- name: "SCORED | 1.5.3 | PATCH | Ensure prelink is disabled"
  command: prelink -ua
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
    - prelink_installed is defined and prelink_installed.rc == 0
  tags:
    - level1
    - scored
    - patch
    - rule_1.5.3
    - low

- name: "SCORED | 1.5.3 | PATCH | Ensure prelink is disabled"
  yum:
    name: prelink
    state: absent
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
  tags:
    - level1
    - scored
    - patch
    - rule_1.5.3
    - medium

- name: "SCORED | 1.6.1.1 | PATCH | Ensure SELinux is not disabled in bootloader configuration"
  replace:
    dest: /etc/default/grub
    regexp: '(selinux|enforcing)\s*=\s*0\s*'
    follow: yes
  register: selinux_grub_patch
  ignore_errors: yes
  notify: generate new grub config
  when:
    - amazonlinux2cis_level2 is defined and amazonlinux2cis_level2
  tags:
    - level2
    - scored
    - patch
    - rule_1.6.1.1
    - high

- name: "SCORED | 1.6.1.2 | PATCH | Ensure the SELinux state is enforcing"
  selinux:
    conf: /etc/selinux/config
    policy: "{{ amazonlinux2cis_selinux_pol }}"
    state: enforcing
  when:
    - amazonlinux2cis_level2 is defined and amazonlinux2cis_level2
    - amazonlinux2cis_selinux_disable is defined and not amazonlinux2cis_selinux_disable
  tags:
    - level2
    - scored
    - selinux
    - patch
    - rule_1.6.1.2
    - high

- name: "SCORED | 1.6.1.3 | PATCH | Ensure SELinux policy is configured"
  selinux:
    conf: /etc/selinux/config
    policy: "{{ amazonlinux2cis_selinux_pol }}"
    state: enforcing
  when:
    - amazonlinux2cis_level2 is defined and amazonlinux2cis_level2
    - amazonlinux2cis_selinux_disable is defined and not amazonlinux2cis_selinux_disable
  tags:
    - level2
    - scored
    - selinux
    - patch
    - rule_1.6.1.3
    - medium

- name: "SCORED | 1.6.1.4 | PATCH | Ensure SETroubleshoot is not installed"
  yum:
    name: setroubleshoot
    state: absent
  when:
    - amazonlinux2cis_level2 is defined and amazonlinux2cis_level2
  tags:
    - level2
    - scored
    - selinux
    - patch
    - rule_1.6.1.4
    - low

- name: "SCORED | 1.6.1.5 | PATCH | Ensure the MCS Translation Service (mcstrans) is not installed"
  yum:
    name: mcstrans
    state: absent
  when:
    - amazonlinux2cis_level2 is defined and amazonlinux2cis_level2
  tags:
    - level2
    - scored
    - patch
    - rule_1.6.1.5
    - low

- name: "SCORED | 1.6.1.6 | PATCH | Ensure no unconfined daemons exist"
  command: /bin/true
  changed_when: no
  when:
    - amazonlinux2cis_level2 is defined and amazonlinux2cis_level2
  tags:
    - level2
    - patch
    - rule_1.6.1.6
    - medium

- name: "SCORED | 1.6.2 | PATCH | Ensure SELinux is installed"
  yum:
    name: libselinux
    state: present
  when:
    - amazonlinux2cis_level2 is defined and amazonlinux2cis_level2
  tags:
    - level2
    - scored
    - patch
    - rule_1.6.2
    - high

- stat: path=/etc/motd
  register: motd_link
  tags:
    - level1
    - banner
    - patch
    - rule_1.7.1.1
    - low

- command: /usr/sbin/update-motd --disable
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
    - motd_link.islink is defined and motd_link.stat.islink
    - amazonlinux2cis_disable_auto_motd is defined and amazonlinux2cis_disable_auto_motd
  ignore_errors: true
  tags:
    - level1
    - banner
    - patch
    - rule_1.7.1.1
    - low

- name: "SCORED | 1.7.1.1 | PATCH | Ensure message of the day is configured properly"
  shell: update-motd --disable
  become: yes
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
    - amazonlinux2cis_disable_auto_motd is defined and amazonlinux2cis_disable_auto_motd
  tags:
    - level1
    - banner
    - patch
    - rule_1.7.1.1
    - low

- name: "SCORED | 1.7.1.1 | PATCH | Ensure message of the day is configured properly"
  template:
    src: etc/motd.j2
    dest: /etc/motd
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
    - amazonlinux2cis_set_motd is defined and amazonlinux2cis_set_motd
  tags:
    - level1
    - banner
    - patch
    - rule_1.7.1.1
    - low

- name: "SCORED | 1.7.1.1 | PATCH | Ensure message of the day is configured properly"
  template:
    src: etc/motd.j2
    dest: /var/lib/update-motd/motd
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
    - amazonlinux2cis_set_motd is defined and amazonlinux2cis_set_motd
  tags:
    - level1
    - banner
    - patch
    - rule_1.7.1.1
    - low

- name: "NOTSCORED | 1.7.1.2 | PATCH | Ensure local login warning banner is configured properly"
  template:
    src: etc/issue.j2
    dest: /etc/issue
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
  tags:
    - level1
    - patch
    - rule_1.7.1.2
    - low

- name: "NOTSCORED | 1.7.1.3 | PATCH | Ensure remote login warning banner is configured properly"
  template:
    src: etc/issue.net.j2
    dest: /etc/issue.net
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
  tags:
    - level1
    - banner
    - patch
    - rule_1.7.1.3
    - low

- name: "NOTSCORED | 1.7.1.4 | PATCH | Ensure permissions on /etc/motd are configured"
  stat: path=/etc/motd
  register: motd_link
  tags:
    - level1
    - perms
    - patch
    - rule_1.7.1.4
    - low

- name: "NOTSCORED | 1.7.1.4 | PATCH | Ensure permissions on /etc/motd are configured"
  command: /usr/sbin/update-motd --disable
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
    - motd_link.islink is defined and motd_link.stat.islink
    - amazonlinux2cis_disable_auto_motd is defined and amazonlinux2cis_disable_auto_motd
  ignore_errors: true
  tags:
    - level1
    - perms
    - patch
    - rule_1.7.1.4
    - low

- name: "NOTSCORED | 1.7.1.4 | PATCH | Ensure permissions on /etc/motd are configured"
  file:
    path: /etc/motd
    state: file
    owner: root
    group: root
    mode: 0644
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
    - motd_link.islink is defined and motd_link.stat.islink == False
  ignore_errors: true
  tags:
    - level1
    - perms
    - patch
    - rule_1.7.1.4
    - low

- name: "NOTSCORED | 1.7.1.4 | PATCH | Ensure permissions on /etc/motd are configured"
  template:
    src: etc/motd.j2
    dest: /etc/motd
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
    - amazonlinux2cis_set_motd is defined and amazonlinux2cis_set_motd
    - motd_link.islink is defined and motd_link.stat.islink == False
  tags:
    - level1
    - banner
    - patch
    - rule_1.7.1.1
    - low

- name: "SCORED | 1.7.1.5 | PATCH | Ensure permissions on /etc/issue are configured"
  file:
    dest: /etc/issue
    state: file
    owner: root
    group: root
    mode: 0644
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
  tags:
    - level1
    - perms
    - patch
    - rule_1.7.1.5
    - low

- name: "NOTSCORED | 1.7.1.6 | PATCH | Ensure permissions on /etc/issue.net are configured"
  file:
    dest: /etc/issue.net
    state: file
    owner: root
    group: root
    mode: 0644
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
  tags:
    - level1
    - perms
    - patch
    - rule_1.7.1.6
    - low

- name: "NOTSCORED | 1.8 | PATCH | Ensure updates, patches, and additional security software are installed"
  yum:
    name: "*"
    state: latest
  when:
    - amazonlinux2cis_level1 is defined and amazonlinux2cis_level1
    - amazonlinux2cis_update is defined and amazonlinux2cis_update
  tags:
    - level1
    - patch
    - rule_1.8
    - medium
